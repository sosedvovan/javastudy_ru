Interceptors (перехватчики ) в Spring MVC. Настройка, пример использования
Пример использования простого перехватчика для дополнительной обработки
запроса в Spring MVC.


Используемые технологии и библиотеки
Spring MVC 4.2.4.Release
Maven 3.2.5
IntelliJ IDEA 15.0.2

1. Описание задачи
Рассмотреть работу перехватчиков в Spring MVC. Написать три метода:
preHandle(), postHandle(), afterCompletion(), которые вызываются перед
обработкой запроса актуальным классом, после этой обработки,
а так же после окончания запроса соответственно.

Для этой статьи относительно прошлой части добавлены только два класса
InterceptorController и SiteInterceptor. Первый класс — это обычный контроллер,
который обрабатывает запрос в стандартном порядке. С помощью него мы увидим в
какой момент относительно вызова метода контроллера будут вызываться методы
перехватчика.

Для включения в обработку запросов перехватчиков Spring необходимо минимум настроек.

mvc-config.xml:

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/interceptorCall/*"/>
            <!--need to use ' /** ' not ' /* ' if you want to intercept all requests.-->
            <!--<mvc:mapping path="/**"/>-->
            <bean class="ru.javastudy.mvcHtml5Angular.mvc.interceptors.SiteInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    Здесь приведена простенькая настройка одного перехватчика. Сначала задается
    общий тег <interceptors /> внутри которого необходимо перечислить все
    необходимые перехватчики. В нашем случае задан один перехватчик, а так же его
    маппинг (/interceptorCall/*). Так же указан класс перехватчик, который должен
    реагировать при перехвате запроса, соответствующему URI.  В комментариях в коде
    обращаю внимание, что для обработки всех запросов необходимо использовать две
    звездочки, а не одну.